-- Table: Academia.academias

-- DROP TABLE IF EXISTS "Academia".academias;

CREATE TABLE IF NOT EXISTS "Academia".academias
(
    endereco_academia character varying(30) COLLATE pg_catalog."default" NOT NULL,
    cnpj integer NOT NULL,
    qtd_maquinas integer,
    lucro_mensal integer,
    lucro_anual integer,
    CONSTRAINT academias_pkey PRIMARY KEY (endereco_academia, cnpj)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS "Academia".academias
    OWNER to postgres;



-- Table: Academia.clientes

-- DROP TABLE IF EXISTS "Academia".clientes;

CREATE TABLE IF NOT EXISTS "Academia".clientes
(
    cpf integer NOT NULL,
    nome character varying(30) COLLATE pg_catalog."default",
    total_desconto integer,
    idade integer,
    instrutor character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT clientes_pkey PRIMARY KEY (cpf),
    CONSTRAINT clientes_cpf_fkey FOREIGN KEY (cpf)
        REFERENCES "Academia".reservas_de_entrada (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS "Academia".clientes
    OWNER to postgres;




-- Table: Academia.descontos

-- DROP TABLE IF EXISTS "Academia".descontos;

CREATE TABLE IF NOT EXISTS "Academia".descontos
(
    numero_convites integer,
    total_desconto integer,
    qtd_desconto integer,
    brindes character varying(30) COLLATE pg_catalog."default",
    id_numero integer,
    CONSTRAINT foreignkey_idnumero FOREIGN KEY (id_numero)
        REFERENCES "Academia".clientes (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS "Academia".descontos
    OWNER to postgres;




-- Table: Academia.mensalidades

-- DROP TABLE IF EXISTS "Academia".mensalidades;

CREATE TABLE IF NOT EXISTS "Academia".mensalidades
(
    data_inicio date NOT NULL,
    data_fim date NOT NULL,
    valor_mensal integer NOT NULL,
    total_desconto integer,
    tipo_pagamento character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT mensalidades_pkey PRIMARY KEY (data_inicio, data_fim)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS "Academia".mensalidades
    OWNER to postgres;





-- Table: Academia.profissionais

-- DROP TABLE IF EXISTS "Academia".profissionais;

CREATE TABLE IF NOT EXISTS "Academia".profissionais
(
    nome character varying(30) COLLATE pg_catalog."default" NOT NULL,
    profissao character varying(30) COLLATE pg_catalog."default" NOT NULL,
    salario integer,
    categoria character varying(30) COLLATE pg_catalog."default" NOT NULL,
    instrutor character varying(30) COLLATE pg_catalog."default",
    endereco character varying(30) COLLATE pg_catalog."default",
    CONSTRAINT profissionais_pkey PRIMARY KEY (nome)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS "Academia".profissionais
    OWNER to postgres;




-- Table: Academia.reservas_de_entrada

-- DROP TABLE IF EXISTS "Academia".reservas_de_entrada;

CREATE TABLE IF NOT EXISTS "Academia".reservas_de_entrada
(
    turno character varying(30) COLLATE pg_catalog."default",
    cpf integer NOT NULL,
    horario_inicio date,
    numero_maquina integer,
    CONSTRAINT reservas_de_entrada_pkey PRIMARY KEY (cpf),
    CONSTRAINT foreignkey_cpf FOREIGN KEY (cpf)
        REFERENCES "Academia".clientes (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS "Academia".reservas_de_entrada
    OWNER to postgres;



-- Table: Academia.reservas_de_saida

-- DROP TABLE IF EXISTS "Academia".reservas_de_saida;

CREATE TABLE IF NOT EXISTS "Academia".reservas_de_saida
(
    turno character varying(30) COLLATE pg_catalog."default",
    cpf integer NOT NULL,
    horario_fim date,
    numero_maquina integer,
    CONSTRAINT reservas_de_saida_pkey PRIMARY KEY (cpf),
    CONSTRAINT foreignkey_cpf FOREIGN KEY (cpf)
        REFERENCES "Academia".clientes (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS "Academia".reservas_de_saida
    OWNER to postgres;